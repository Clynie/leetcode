{"javascript":"/**\r\n * Definition for singly-linked list.\r\n * function ListNode(val) {\r\n *     this.val = val;\r\n *     this.next = null;\r\n * }\r\n */\r\n/**\r\n * Definition for a binary tree node.\r\n * function TreeNode(val) {\r\n *     this.val = val;\r\n *     this.left = this.right = null;\r\n * }\r\n */\r\n/**\r\n * @param {ListNode} head\r\n * @return {TreeNode}\r\n */\r\nvar sortedListToBST = function(head) {\r\n    if (head === null) return null\r\n    debugger\r\n    if (head.next === null) return new TreeNode(head.val)\r\n    var mid = getMid(head)\r\n    var node = mid.next\r\n    mid.next = null\r\n    var result = new TreeNode(node.val)\r\n    result.left = sortedListToBST(head)\r\n    result.right = sortedListToBST(node.next)\r\n    return result\r\n}\r\n\r\nvar getMid = function(head) {\r\n\tvar slow = new ListNode(0)\r\n\tslow.next = head\r\n\tvar fast = head\r\n\twhile(fast && fast.next){\r\n\t\tslow = slow.next\r\n\t\tfast = fast.next.next\r\n\t}\r\n\treturn slow\r\n}\r\n"}